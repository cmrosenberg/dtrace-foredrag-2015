* Ønsker velkommen

* Reklamerer for programmeringskonkurranse

* Referer til reklamen for arrangementet:

    * Dette er altså et foredrag om DTrace

    * DTrace er en skikkelig heftig teknologi (bare vent!),
    men vanskelig å forstå uten å først forstå hvilke problemer
    det er ment for å løse.

    * Så la oss ta en titt på hvordan software-verden ser ut i dag...

* Moderne software-løsninger er _systemer_, ikke enkeltprogrammer.

    * Moderne software-utvikling askellereres av
      tilgang til gjenbrukbare komponenter: Hvis du vil lage en blogg, trenger
      du ikke å finne opp en database, et operativsystem osv....

    * Problemet er da at løsningen du leverer til kunden består av mye mer enn
      koden du har skrevet selv. Faktisk er din kode kanskje den minst
      komplekse komponenten i løsningen....

* Når vi utvikler komplekse systemer, er det klart at vi trenger:

    * En mulighet til å se hvordan de forskjellige komponentene interagerer med
      hverandre: Er databasen eller webserveren som gjør at ting går treigt?

    * En mulighet til å få en viss innsikt i programmer vi
        * ikke selv har kildekoden til, eller
        * ikke selv har tid og ressurser til å analysere fullstendig
          (man har ikke råd til å være ekspert i alt).

* ... men vi ternger også verktøy for å analysere _kjørende_ systemer

    * Det er ikke nok å kunne få innsikt i ting når vi sitter på våre egne
      utviklingsmaskiner: Hvis ting skjærer seg i det ferdige produktet må vi
      kunne raskt få innsikt i det kjørende systemet...

    * ... uten at selve _observasjonen av systemet_ påvirker hverken
    sikkerhet eller ytelse.

* DTrace to the rescue!

    * DTrace er laget fra bunn av for å løse disse problemene.

    * Er _åpen kildekode_, men anses dessverre ikke for å være GPL-kompatibel.

    * Ble lansert av Sun Microsystems i 2005, etter flere års intenst arbeid
      fra noen av deres aller beste ingeniører.

    * Nå, ti år senere, ser instrumenteringslanskapet ganske annerledes ut.
      Innsiktene fra DTrace har inspirert nye teknologier: Linux har verktøy
      som kan gi deg det aller meste av DTrace's funksjonalitet :)

* DTrace to the rescue (forts)

    * Før DTrace var instrumenteringsteknologiene enten for usikre eller
      gikk for mye utover ytelsen til at de kunne bli brukt i kritiske systemer.

    * Tidligere teknologier baserte seg på _statisk instrumentering_
